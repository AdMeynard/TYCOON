function grad2 = grad2(F,N,omega,M,Fs,alpha)
% Compute the second part of the gradient
%
%

if (norm(alpha)==0)
    grad2 = (2*pi/M)*(-deriv_t(deriv_t(F, Fs, N, M ), Fs, N, M ) + ...
        4*1i*pi*repmat(omega',1,N).*deriv_t(F, Fs, N, M ) + ...
        (4*pi^2*repmat(omega',1,N).^2).*F);
    
    
else
    grad2 = (2*pi/M)*(-deriv_t(deriv_t(F, Fs, N, M ), Fs, N, M ) + ...
        4*1i*pi*repmat(omega',1,N).*deriv_t(F, Fs, N, M ) + ...
        (4*pi^2*repmat(omega',1,N).^2).*F - ...
        bsxfun(@times,alpha,deriv_t(deriv_f(F, Fs, N, M), Fs, N, M)) - ...
        bsxfun(@times,alpha,deriv_f(deriv_t(F, Fs, N, M), Fs, N, M)) + ...
        1i*4*pi*bsxfun(@times,alpha,repmat(omega',1,N).*deriv_f(F, Fs, N, M)) - ...
        bsxfun(@times,alpha.^2,deriv_f(deriv_f(F, Fs, N, M), Fs, N, M)));
    
end


